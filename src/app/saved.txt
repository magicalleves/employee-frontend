// page.tsx
'use client';
import { useState, useEffect } from 'react';
import { useAppDispatch, useAppSelector } from './store';
import { loginUser, logout, refreshToken } from './store';
import Link from 'next/link';

export default function Home() {
  const [formData, setFormData] = useState({ username: '', password: '' });
  const dispatch = useAppDispatch();
  const { token, refreshToken: storedRefreshToken, loading, error } = useAppSelector((state) => state.user);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    dispatch(loginUser(formData));
  };

  // Token refresh mechanism
  useEffect(() => {
    if (!token && storedRefreshToken) {
      dispatch(refreshToken({ accessToken: token, refreshToken: storedRefreshToken }));
    }

    const interval = setInterval(() => {
      if (token && storedRefreshToken) {
        dispatch(refreshToken({ accessToken: token, refreshToken: storedRefreshToken }));
      }
    }, 15 * 60 * 1000); // Refresh every 15 minutes

    return () => clearInterval(interval);
  }, [token, storedRefreshToken, dispatch]);

  if (token) {
    return (
      <div className="login-container">
        <div className="login-box">
          <h1 className="login-title">Welcome!</h1>
          <div className="welcome-message">
            <p>You're successfully logged in</p>
          </div>
          <button
            onClick={() => dispatch(logout())}
            className="submit-button"
            style={{ backgroundColor: '#dc2626' }}
          >
            Logout
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="login-container">
      <div className="login-box">
        <h1 className="login-title">Login</h1>
        {error && <div className="error-message">{error}</div>}
        <form onSubmit={handleSubmit}>
          <div className="form-group">
            <label className="form-label">Username</label>
            <input
              type="text"
              className="form-input"
              placeholder="Enter your username"
              value={formData.username}
              onChange={(e) => setFormData({ ...formData, username: e.target.value })}
              required
            />
          </div>
          <div className="form-group">
            <label className="form-label">Password</label>
            <input
              type="password"
              className="form-input"
              placeholder="••••••••"
              value={formData.password}
              onChange={(e) => setFormData({ ...formData, password: e.target.value })}
              required
            />
          </div>
          <div className="nav-link">
            Don't have an account? <Link href="/signup">Sign up</Link>
          </div>
          <button 
            type="submit" 
            className="submit-button"
            disabled={loading}
          >
            {loading ? 'Signing In...' : 'Sign In'}
          </button>
        </form>
      </div>
    </div>
  );
}



// 'use client';
// import { useEffect } from 'react';
// import { useRouter } from 'next/navigation';

// export default function Home() {
//   const router = useRouter();

//   useEffect(() => {
//     // Redirect to dashboard immediately
//     router.push('/dashboard');
//   }, [router]);

//   return null;
// }


// import type { Metadata } from 'next';
// import { Inter } from 'next/font/google';
// import StoreProvider from './providers';
// import './globals.css';

// const inter = Inter({ subsets: ['latin'] });

// export const metadata: Metadata = {
//   title: 'Login Redux App',
//   description: 'Generated by create next app',
// };

// export default function RootLayout({
//   children,
// }: {
//   children: React.ReactNode
// }) {
//   return (
//     <html lang="en">
//       <body className={inter.className}>
//         <StoreProvider>
//           {children}
//         </StoreProvider>
//       </body>
//     </html>
//   );
// }

